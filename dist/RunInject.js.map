{"version":3,"sources":["webpack:///webpack/bootstrap 4dfb8a15389a49c307b3?e8c9","webpack:///./src/inject/RunInject.ts","webpack:///external \"reflect-metadata\"?215a","webpack:///external \"inversify\"?43d0","webpack:///./src/inject/inversify.config.ts","webpack:///./src/inject/Car.ts","webpack:///./src/inject/InjectTest.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACrCA,qBAAO,CAAkB,CAAC;AAC1B,8CAAqB,CAAoB,CAAC;AAO1C;;IAEG;AACH,QAAO,CAAC,GAAG,CAAC,0BAAM,CAAC,GAAG,CAAW,UAAU,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;AACtD,QAAO,CAAC,GAAG,CAAC,oCAAoC,GAAG,0BAAM,CAAC,GAAG,CAAc,aAAa,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;;;;;;;ACblG,8C;;;;;;;ACAA,uC;;;;;;;;;;ACCA,uCAAuB,CAAW,CAAC;AAGnC,iCAAkB,CAAO,CAAC;AAG1B,wCAAuB,CAAc,CAAC;AAGtC,KAAI,MAAM,GAAqB,IAAI,kBAAM,EAAE,CAAC;AAE5C,mCAAkC;AAGlC,OAAM,CAAC,IAAI,CAAW,UAAU,CAAC,CAAC,EAAE,CAAC,aAAG,CAAC,CAAC,gBAAgB,EAAE,CAAC;AAC7D,kEAAiE;AACjE,OAAM,CAAC,IAAI,CAAc,aAAa,CAAC,CAAC,EAAE,CAAC,oBAAU,CAAC,CAAC,gBAAgB,EAAE,CAAC;AAC1E;mBAAe,MAAM,CAAC;;;;;;;;;;;;;;;;;AChBtB,uCAA4B,CAAW,CAAC;AAIxC;KAAA;KAIA,CAAC;KAHG,mBAAK,GAAL;SACI,MAAM,CAAC,4BAA4B,CAAC;KACxC,CAAC;KAJL;SAAC,sBAAU,EAAE;;YAAA;KAKb,UAAC;AAAD,EAAC;AAJD;sBAIC;;;;;;;;;;;;;;;;;;;;ACVD,uCAAmC,CAAW,CAAC;AAO/C;KAEK,oBAAgC,OAAgB;SAC5C,QAAQ,GAAG,OAAO,CAAC;SAEnB,4CAA4C;KAChD,CAAC;KAEF,yBAAI,GAAJ;SACG,MAAM,CAAE,QAAQ,CAAC,KAAK,EAAE,CAAC;KAC5B,CAAC;KAXL;SAAC,sBAAU,EAAE;oBAGK,kBAAM,CAAC,UAAU,CAAC;;mBAHvB;KAYb,iBAAC;AAAD,EAAC;AAXD;6BAWC;AAED,KAAI,QAAiB,CAAC","file":"RunInject.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4dfb8a15389a49c307b3\n **/","\r\nimport \"reflect-metadata\";\r\nimport  kernel  from \"./inversify.config\";\r\nimport { IInjectTest } from \"./IInjectTest\";\r\n\r\n\r\nimport { IVehicle } from \"./IVehicle\";\r\n\r\n\r\n/**\r\n * Invoking basic @inject\r\n */\r\nconsole.log(kernel.get<IVehicle>(\"IVehicle\").drive());\r\nconsole.log(\"IInjectTest (@inject IVehicle)--> \" + kernel.get<IInjectTest>(\"IInjectTest\").init());\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/inject/RunInject.ts\n **/","module.exports = require(\"reflect-metadata\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"reflect-metadata\"\n ** module id = 1\n ** module chunks = 0 1 2\n **/","module.exports = require(\"inversify\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"inversify\"\n ** module id = 3\n ** module chunks = 0 1 2\n **/","\nimport { Kernel } from \"inversify\";\nimport { IVehicle } from \"./IVehicle\";\nimport {IInjectTest } from \"./IInjectTest\";\nimport  Car  from \"./Car\";\nimport Truck from \"./Truck\";\n\nimport InjectTest from \"./InjectTest\";\n\n\nlet kernel:inversify.IKernel = new Kernel();\n\n//kernel.bind(\"IVehicle\").to(Car);\n\n\nkernel.bind<IVehicle>(\"IVehicle\").to(Car).inSingletonScope();\n//kernel.bind<IVehicle>(\"IVehicle\").to(Truck).inSingletonScope();\nkernel.bind<IInjectTest>(\"IInjectTest\").to(InjectTest).inSingletonScope();\nexport default kernel;\n\n\n/** WEBPACK FOOTER **\n ** ./src/inject/inversify.config.ts\n **/","\nimport { IVehicle } from \"./IVehicle\";\nimport { injectable }  from \"inversify\";\n\n\n@injectable()\nexport default class Car implements IVehicle {\n    drive(): string {\n        return \"Drive Car --> Car instance\";\n    }   \n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/inject/Car.ts\n **/","import {injectable , inject}  from \"inversify\";\n\nimport { IVehicle } from \"./IVehicle\";\n\nimport { IInjectTest } from \"./IInjectTest\";\n\n@injectable()\nexport default class InjectTest implements IInjectTest {\n    \n     constructor(@inject(\"IVehicle\") vehicle:IVehicle) {\n         _vehicle = vehicle;\n         \n         // console.log(\"from test\" + this._vehicle);\n     }\n    \n    init() : string  {\n       return  _vehicle.drive();\n    }\n}\n\nlet _vehicle:IVehicle;\n\n\n/** WEBPACK FOOTER **\n ** ./src/inject/InjectTest.ts\n **/"],"sourceRoot":""}